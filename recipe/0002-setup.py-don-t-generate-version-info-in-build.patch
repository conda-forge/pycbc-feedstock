From 90f944cc3dc5a8ba418c893c58ed31858c43e712 Mon Sep 17 00:00:00 2001
From: "duncan.macleod" <duncan.macleod@ligo.org>
Date: Wed, 2 Aug 2023 17:48:27 +0100
Subject: [PATCH 2/3] setup.py: don't generate version info in build

this has already been generated by the time conda get's involved
---
 setup.py | 47 -----------------------------------------------
 1 file changed, 47 deletions(-)

diff --git a/setup.py b/setup.py
index c24323923..fb7cb602f 100755
--- a/setup.py
+++ b/setup.py
@@ -104,53 +104,6 @@ class clean(_clean):
             print('removed ' + fol)
 
 def get_version_info():
-    """Get VCS info and write version info to version.py.
-    """
-    from pycbc import _version_helper
-
-    class vdummy(object):
-        def __getattr__(self, attr):
-            return ''
-
-    # If this is a pycbc git repo always populate version information using GIT
-    try:
-        vinfo = _version_helper.generate_git_version_info()
-    except:
-        vinfo = vdummy()
-        vinfo.version = '2.4.2'
-        vinfo.release = 'True'
-
-    version_script = f"""# coding: utf-8
-# Generated by setup.py for PyCBC on {vinfo.build_date}.
-
-# general info
-version = '{vinfo.version}'
-date = '{vinfo.date}'
-release = '{vinfo.release}'
-last_release = '{vinfo.last_release}'
-
-# git info
-git_hash = '{vinfo.hash}'
-git_branch = '{vinfo.branch}'
-git_tag = '{vinfo.tag}'
-git_author = '{vinfo.author}'
-git_committer = '{vinfo.committer}'
-git_status = '{vinfo.status}'
-git_builder = '{vinfo.builder}'
-git_build_date = '{vinfo.build_date}'
-git_verbose_msg = \"\"\"Version: {vinfo.version}
-Branch: {vinfo.branch}
-Tag: {vinfo.tag}
-Id: {vinfo.hash}
-Builder: {vinfo.builder}
-Build date: {vinfo.build_date}
-Repository status is {vinfo.status}\"\"\"
-
-from pycbc._version import *
-"""
-    with open('pycbc/version.py', 'wb') as f:
-        f.write(version_script.encode('utf-8'))
-
     from pycbc import version
     return version.version
 
-- 
2.39.2

